{
	"id": "1ce284f78fdfc6af5872f452cf02b394",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/"
			]
		},
		"sources": {
			"contracts/MasterPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\nimport \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol\";\n\ninterface IMasterPool {\n    function transferCommission(address _to, uint256 amount) external returns(bool);\n}\n\ncontract MasterPool is Ownable  {\n    \n    address public usdt;\n    // address public refContract;\n    mapping(address => bool) public isController;\n    constructor(address _usdt) payable {\n        usdt = _usdt;\n    }\n\n    function setController(address _address) external onlyOwner {\n        isController[_address] = true;\n    }\n\n    function SetUsdt(address _usdt) external onlyOwner {\n        usdt = _usdt;\n    }\n\n    // modifier onlyController {\n    //     require(msg.sender == refContract, \"Only Controller\");\n    //     _;\n    // }\n    modifier onlyController {\n        require(isController[msg.sender] == true, \"Only Controller\");\n        _;\n    }\n\n    function widthdraw(uint256 amount) external onlyOwner {\n        require(usdt != address(0), \"Invalid usdt\");\n        IERC20(usdt).transfer(msg.sender, amount);\n    }   \n\n    // Only Controller\n    function transferCommission(address _to, uint256 amount) external onlyController returns(bool) {\n        return IERC20(usdt).transfer(_to, amount);\n    }\n}"
			},
			"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@v4.9.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@v4.9.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@v4.9.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@v4.9.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@v4.9.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts@v4.9.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MasterPool.sol": {
				"IMasterPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferCommission",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferCommission(address,uint256)": "d9ea1b22"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferCommission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MasterPool.sol\":\"IMasterPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@v4.9.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/MasterPool.sol\":{\"keccak256\":\"0x3d322822f9311b296fb688034475dc7459e2bc116421bbce71d0ab16a9edcc01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abbf95a0ba945b4fb21a1fee43dee4868ab3e280691d45f525e45eb3c1589f4d\",\"dweb:/ipfs/QmNvnuCUAcutUnJfTBWM3cdZcFZ63DfHL4dWYW1VYD1RCF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MasterPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								}
							],
							"name": "SetUsdt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isController",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferCommission",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "widthdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n  0x80\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_1\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x20\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  dup2\n  and\n  swap1\n  dup2\n  swap1\n  sub\n  tag_5\n  jumpi\n  sload(0x00)\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n    /* \"@openzeppelin/contracts@v4.9.0/utils/Context.sol\":719:729  msg.sender */\n  swap1\n  caller\n    /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n  dup3\n  dup3\n  and\n  or\n  0x00\n  sstore\n  mload(0x40)\n    /* \"@openzeppelin/contracts@v4.9.0/utils/Context.sol\":719:729  msg.sender */\n  swap4\n  caller\n    /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n  swap2\n  and\n    /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  0x00\n  dup1\n  log3\n    /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n  sload(0x01)\n  and\n  or\n  0x01\n  sstore\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_5:\n  0x00\n  dup1\n  revert\ntag_1:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\nstop\n\nsub_0: assembly {\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      0x80\n      0x40\n      dup2\n      dup2\n      mstore\n      0x04\n      dup1\n      calldatasize\n      lt\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      0x00\n      swap3\n      dup4\n      calldataload\n      0xe0\n      shr\n      swap1\n      dup2\n      0x2f48ab7d\n      eq\n      tag_8\n      jumpi\n      pop\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x92eefe9b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb429afeb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd9ea1b22\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xddcd6408\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe0da260c\n      eq\n      tag_22\n      jumpi\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      jumpi(tag_28, callvalue)\n      jumpi(tag_28, slt(add(not(0x03), calldatasize), 0x20))\n      tag_30\n      tag_1\n      jump\t// in\n    tag_30:\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1063:1125  modifier onlyOwner() {... */\n      swap1\n      tag_31\n      tag_2\n      jump\t// in\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup4\n      iszero\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      tag_32\n      jumpi\n      pop\n      pop\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup5\n      sstore\n      and\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup4\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup1\n      return\n    tag_32:\n      swap1\n      0x20\n      0x84\n      swap3\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xd0, 0x646472657373)\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_28:\n      dup3\n      dup1\n      revert\n    tag_22:\n      pop\n      dup3\n      swap1\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1063:1125  modifier onlyOwner() {... */\n      tag_38\n      tag_2\n      jump\t// in\n    tag_38:\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      swap1\n        /* \"contracts/MasterPool.sol\":1026:1044  usdt != address(0) */\n      dup2\n      iszero\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      tag_39\n      jumpi\n      dup4\n      mload\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/MasterPool.sol\":1071:1112  IERC20(usdt).transfer(msg.sender, amount) */\n      dup2\n      mstore\n        /* \"contracts/MasterPool.sol\":1093:1103  msg.sender */\n      caller\n        /* \"contracts/MasterPool.sol\":1071:1112  IERC20(usdt).transfer(msg.sender, amount) */\n      dup2\n      dup4\n      add\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      swap1\n      dup2\n      mstore\n      swap2\n      calldataload\n      0x20\n      dup4\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap4\n      swap5\n      swap1\n      swap4\n      swap1\n      swap3\n      swap1\n      swap2\n      dup5\n      swap2\n      swap1\n      dup3\n      swap1\n      dup8\n      swap1\n      dup3\n      swap1\n      0x40\n      add\n        /* \"contracts/MasterPool.sol\":1071:1112  IERC20(usdt).transfer(msg.sender, amount) */\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_42\n      jumpi\n      pop\n      tag_44\n      jumpi\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      pop\n      dup1\n      return\n        /* \"contracts/MasterPool.sol\":1071:1112  IERC20(usdt).transfer(msg.sender, amount) */\n    tag_44:\n      tag_46\n      swap1\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      0x20\n        /* \"contracts/MasterPool.sol\":1071:1112  IERC20(usdt).transfer(msg.sender, amount) */\n      returndatasize\n      dup2\n      gt\n      tag_47\n      jumpi\n    tag_48:\n      tag_49\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_49:\n      dup2\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_46:\n      pop\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup1\n      return\n        /* \"contracts/MasterPool.sol\":1071:1112  IERC20(usdt).transfer(msg.sender, amount) */\n    tag_47:\n      pop\n      returndatasize\n      jump(tag_48)\n    tag_42:\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      mload\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_39:\n      0x64\n      swap1\n      0x20\n      dup6\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x125b9d985b1a59081d5cd91d)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_36:\n      pop\n      dup1\n      revert\n    tag_20:\n      dup4\n      jumpi(tag_52, callvalue)\n      jumpi(tag_52, slt(add(not(0x03), calldatasize), 0x20))\n      tag_54\n      tag_1\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1063:1125  modifier onlyOwner() {... */\n      tag_55\n      tag_2\n      jump\t// in\n    tag_55:\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      and(sload(0x01), shl(0xa0, 0xffffffffffffffffffffffff))\n      or\n      0x01\n      sstore\n      dup1\n      return\n    tag_52:\n      dup1\n      revert\n    tag_18:\n      pop\n      swap2\n      swap1\n      jumpi(tag_36, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      tag_60\n      tag_1\n      jump\t// in\n    tag_60:\n        /* \"contracts/MasterPool.sol\":891:901  msg.sender */\n      swap3\n      caller\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup4\n      mstore\n      0x20\n      swap4\n        /* \"contracts/MasterPool.sol\":878:890  isController */\n      0x02\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup6\n      mstore\n      0x01\n      0xff\n      dup5\n      dup7\n      keccak256\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/MasterPool.sol\":878:910  isController[msg.sender] == true */\n      sub\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      tag_61\n      jumpi\n      sload(0x01)\n      dup4\n      mload\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/MasterPool.sol\":1263:1297  IERC20(usdt).transfer(_to, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      swap3\n      dup4\n      and\n        /* \"contracts/MasterPool.sol\":1263:1297  IERC20(usdt).transfer(_to, amount) */\n      swap4\n      dup2\n      add\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      swap4\n      dup5\n      mstore\n      calldataload(0x24)\n      0x20\n      dup6\n      add\n      mstore\n      swap3\n      dup7\n      swap3\n      dup5\n      swap3\n      and\n      swap1\n      dup3\n      swap1\n      dup8\n      swap1\n      dup3\n      swap1\n      0x40\n      add\n        /* \"contracts/MasterPool.sol\":1263:1297  IERC20(usdt).transfer(_to, amount) */\n      sub\n      swap3\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_64\n      jumpi\n      swap3\n      tag_66\n      jumpi\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n    tag_67:\n      pop\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"contracts/MasterPool.sol\":1263:1297  IERC20(usdt).transfer(_to, amount) */\n    tag_66:\n      tag_68\n      swap2\n      swap3\n      pop\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_47\n      jumpi\n      tag_49\n      dup2\n      dup4\n      tag_3\n      jump\t// in\n    tag_68:\n      swap1\n      codesize\n      jump(tag_67)\n    tag_64:\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup3\n      mload\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_61:\n      pop\n      dup4\n      0x64\n      swap3\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x89, 0x27b7363c9021b7b73a3937b63632b9)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_16:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap2\n      0xff\n      swap1\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_76\n      tag_1\n      jump\t// in\n    tag_76:\n      and\n      dup2\n      mstore\n        /* \"contracts/MasterPool.sol\":396:440  mapping(address => bool) public isController */\n      0x02\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup6\n      mstore\n      keccak256\n      sload\n      and\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_14:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x20))\n      tag_81\n      tag_1\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1063:1125  modifier onlyOwner() {... */\n      tag_82\n      tag_2\n      jump\t// in\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      and\n      dup3\n      mstore\n        /* \"contracts/MasterPool.sol\":586:598  isController */\n      0x02\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      0x20\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n      dup1\n      return\n    tag_12:\n      pop\n      pop\n      jumpi(tag_36, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      swap1\n      sload\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_10:\n      dup4\n      jumpi(tag_52, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_52\n      jumpi\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1063:1125  modifier onlyOwner() {... */\n      tag_91\n      tag_2\n      jump\t// in\n    tag_91:\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      dup1\n      return\n    tag_8:\n      dup5\n      swap1\n      jumpi(tag_36, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_36\n      jumpi\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_96\n      jumpi\n      jump\t// out\n    tag_96:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_2:\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1273:1279  _owner */\n      0x00\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@v4.9.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      sub\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/MasterPool.sol\":293:1306  contract MasterPool is Ownable  {... */\n    tag_98:\n      0x64\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x20\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_3:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_100\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_100:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_4:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_96\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_96\n      jumpi\n      swap1\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203dee68f27150cfc6f23ef9c996346eed8b6225c59c5ae78e2d3970d97b1b049d64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080601f61063738819003918201601f19168301916001600160401b038311848410176100a7578084926020946040528339810103126100a257516001600160a01b0390818116908190036100a25760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600154161760015561057990816100be8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081632f48ab7d1461045b57508063715018a6146104015780638da5cb5b146103d957806392eefe9b14610396578063b429afeb14610358578063d9ea1b2214610272578063ddcd64081461022a578063e0da260c1461014b5763f2fde38b1461008657600080fd5b346101475760203660031901126101475761009f610480565b906100a861049b565b6001600160a01b039182169283156100f557505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b508290346102265760203660031901126102265761016761049b565b6001546001600160a01b03169081156101f457835163a9059cbb60e01b8152338183019081529135602083810191909152939490939092909184919082908790829060400103925af19081156101eb57506101c0575080f35b6101e09060203d81116101e4575b6101d881836104f3565b81019061052b565b5080f35b503d6101ce565b513d84823e3d90fd5b606490602085519162461bcd60e51b8352820152600c60248201526b125b9d985b1a59081d5cd91d60a21b6044820152fd5b5080fd5b833461026f57602036600319011261026f57610244610480565b61024c61049b565b60018060a01b03166bffffffffffffffffffffffff60a01b600154161760015580f35b80fd5b5091903461022657806003193601126102265761028d610480565b9233835260209360028552600160ff848620541615150361032457600154835163a9059cbb60e01b81526001600160a01b0392831693810193845260243560208501529286928492169082908790829060400103925af192831561031957926102fa575b50519015158152f35b610312919250833d85116101e4576101d881836104f3565b90386102f1565b8251903d90823e3d90fd5b5083606492519162461bcd60e51b8352820152600f60248201526e27b7363c9021b7b73a3937b63632b960891b6044820152fd5b5050346102265760203660031901126102265760209160ff9082906001600160a01b03610383610480565b1681526002855220541690519015158152f35b505034610226576020366003190112610226576103b1610480565b6103b961049b565b6001600160a01b0316825260026020528120805460ff1916600117905580f35b505034610226578160031936011261022657905490516001600160a01b039091168152602090f35b833461026f578060031936011261026f5761041a61049b565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8490346102265781600319360112610226576001546001600160a01b03168152602090f35b600435906001600160a01b038216820361049657565b600080fd5b6000546001600160a01b031633036104af57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761051557604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261049657518015158103610496579056fea26469706673582212203dee68f27150cfc6f23ef9c996346eed8b6225c59c5ae78e2d3970d97b1b049d64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x1F PUSH2 0x637 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xA7 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xA2 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA2 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 CALLER DUP3 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP4 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH2 0x579 SWAP1 DUP2 PUSH2 0xBE DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2F48AB7D EQ PUSH2 0x45B JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xB429AFEB EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD9EA1B22 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xDDCD6408 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xE0DA260C EQ PUSH2 0x14B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0x9F PUSH2 0x480 JUMP JUMPDEST SWAP1 PUSH2 0xA8 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0xF5 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x226 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x226 JUMPI PUSH2 0x167 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1F4 JUMPI DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 CALLDATALOAD PUSH1 0x20 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1EB JUMPI POP PUSH2 0x1C0 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x1E0 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E4 JUMPI JUMPDEST PUSH2 0x1D8 DUP2 DUP4 PUSH2 0x4F3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x52B JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x1CE JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x125B9D985B1A59081D5CD91D PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x26F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26F JUMPI PUSH2 0x244 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x226 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x226 JUMPI PUSH2 0x28D PUSH2 0x480 JUMP JUMPDEST SWAP3 CALLER DUP4 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x2 DUP6 MSTORE PUSH1 0x1 PUSH1 0xFF DUP5 DUP7 KECCAK256 SLOAD AND ISZERO ISZERO SUB PUSH2 0x324 JUMPI PUSH1 0x1 SLOAD DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE SWAP3 DUP7 SWAP3 DUP5 SWAP3 AND SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x319 JUMPI SWAP3 PUSH2 0x2FA JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0x312 SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x1E4 JUMPI PUSH2 0x1D8 DUP2 DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2F1 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x27B7363C9021B7B73A3937B63632B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x226 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x226 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x383 PUSH2 0x480 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x226 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x226 JUMPI PUSH2 0x3B1 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x226 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x226 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x26F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26F JUMPI PUSH2 0x41A PUSH2 0x49B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x226 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x226 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x496 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4AF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x515 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x496 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x496 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xEE PUSH9 0xF27150CFC6F23EF9C9 SWAP7 CALLVALUE PUSH15 0xED8B6225C59C5AE78E2D3970D97B1B DIV SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "293:1013:3:-:0;;;;;;;;;;-1:-1:-1;;293:1013:3;;;;-1:-1:-1;;;;;293:1013:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;293:1013:3;;;;;;;;;;-1:-1:-1;293:1013:3;;;;;;;719:10:2;;293:1013:3;;;;-1:-1:-1;293:1013:3;;;719:10:2;;293:1013:3;;2566:40:0;-1:-1:-1;2566:40:0;;293:1013:3;;;;;;;;;;;;;;-1:-1:-1;293:1013:3;;;;;;-1:-1:-1;293:1013:3;;;;;-1:-1:-1;293:1013:3"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 1179,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604081815260048036101561001557600080fd5b600092833560e01c9081632f48ab7d1461045b57508063715018a6146104015780638da5cb5b146103d957806392eefe9b14610396578063b429afeb14610358578063d9ea1b2214610272578063ddcd64081461022a578063e0da260c1461014b5763f2fde38b1461008657600080fd5b346101475760203660031901126101475761009f610480565b906100a861049b565b6001600160a01b039182169283156100f557505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b508290346102265760203660031901126102265761016761049b565b6001546001600160a01b03169081156101f457835163a9059cbb60e01b8152338183019081529135602083810191909152939490939092909184919082908790829060400103925af19081156101eb57506101c0575080f35b6101e09060203d81116101e4575b6101d881836104f3565b81019061052b565b5080f35b503d6101ce565b513d84823e3d90fd5b606490602085519162461bcd60e51b8352820152600c60248201526b125b9d985b1a59081d5cd91d60a21b6044820152fd5b5080fd5b833461026f57602036600319011261026f57610244610480565b61024c61049b565b60018060a01b03166bffffffffffffffffffffffff60a01b600154161760015580f35b80fd5b5091903461022657806003193601126102265761028d610480565b9233835260209360028552600160ff848620541615150361032457600154835163a9059cbb60e01b81526001600160a01b0392831693810193845260243560208501529286928492169082908790829060400103925af192831561031957926102fa575b50519015158152f35b610312919250833d85116101e4576101d881836104f3565b90386102f1565b8251903d90823e3d90fd5b5083606492519162461bcd60e51b8352820152600f60248201526e27b7363c9021b7b73a3937b63632b960891b6044820152fd5b5050346102265760203660031901126102265760209160ff9082906001600160a01b03610383610480565b1681526002855220541690519015158152f35b505034610226576020366003190112610226576103b1610480565b6103b961049b565b6001600160a01b0316825260026020528120805460ff1916600117905580f35b505034610226578160031936011261022657905490516001600160a01b039091168152602090f35b833461026f578060031936011261026f5761041a61049b565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8490346102265781600319360112610226576001546001600160a01b03168152602090f35b600435906001600160a01b038216820361049657565b600080fd5b6000546001600160a01b031633036104af57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761051557604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261049657518015158103610496579056fea26469706673582212203dee68f27150cfc6f23ef9c996346eed8b6225c59c5ae78e2d3970d97b1b049d64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2F48AB7D EQ PUSH2 0x45B JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xB429AFEB EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD9EA1B22 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xDDCD6408 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xE0DA260C EQ PUSH2 0x14B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0x9F PUSH2 0x480 JUMP JUMPDEST SWAP1 PUSH2 0xA8 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0xF5 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x226 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x226 JUMPI PUSH2 0x167 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1F4 JUMPI DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 CALLDATALOAD PUSH1 0x20 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1EB JUMPI POP PUSH2 0x1C0 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x1E0 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E4 JUMPI JUMPDEST PUSH2 0x1D8 DUP2 DUP4 PUSH2 0x4F3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x52B JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x1CE JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x125B9D985B1A59081D5CD91D PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x26F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x26F JUMPI PUSH2 0x244 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x226 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x226 JUMPI PUSH2 0x28D PUSH2 0x480 JUMP JUMPDEST SWAP3 CALLER DUP4 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x2 DUP6 MSTORE PUSH1 0x1 PUSH1 0xFF DUP5 DUP7 KECCAK256 SLOAD AND ISZERO ISZERO SUB PUSH2 0x324 JUMPI PUSH1 0x1 SLOAD DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE SWAP3 DUP7 SWAP3 DUP5 SWAP3 AND SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x319 JUMPI SWAP3 PUSH2 0x2FA JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0x312 SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x1E4 JUMPI PUSH2 0x1D8 DUP2 DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2F1 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x27B7363C9021B7B73A3937B63632B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x226 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x226 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x383 PUSH2 0x480 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x226 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x226 JUMPI PUSH2 0x3B1 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x226 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x226 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x26F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26F JUMPI PUSH2 0x41A PUSH2 0x49B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x226 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x226 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x496 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4AF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x515 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x496 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x496 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xEE PUSH9 0xF27150CFC6F23EF9C9 SWAP7 CALLVALUE PUSH15 0xED8B6225C59C5AE78E2D3970D97B1B DIV SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "293:1013:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;293:1013:3;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;-1:-1:-1;;;;;293:1013:3;;;;2162:22:0;;293:1013:3;;-1:-1:-1;;293:1013:3;;-1:-1:-1;;;;;;293:1013:3;;;;;;;2566:40:0;293:1013:3;;2566:40:0;293:1013:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;293:1013:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;293:1013:3;;;;1063:62:0;;:::i;:::-;293:1013:3;;-1:-1:-1;;;;;293:1013:3;;1026:18;;293:1013;;;;-1:-1:-1;;;1071:41:3;;1093:10;1071:41;;;293:1013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:41;;;;;;;;;;;;293:1013;;;1071:41;;;293:1013;1071:41;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;293:1013;;1071:41;;;;;;293:1013;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;293:1013:3;;;;;;;;;;;;;;;;-1:-1:-1;;293:1013:3;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;293:1013:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;891:10;;293:1013;;;;878:12;293:1013;;;;;;;;;;;878:32;293:1013;;;;;;-1:-1:-1;;;1263:34:3;;-1:-1:-1;;;;;293:1013:3;;;1263:34;;;293:1013;;;;;;;;;;;;;;;;;;;;;;;;1263:34;;;;;;;;;;;;293:1013;;;;;;;;;1263:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;293:1013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;293:1013:3;;;;;;;;;;;;;-1:-1:-1;;293:1013:3;;;;;;;;;;-1:-1:-1;;;;;293:1013:3;;:::i;:::-;;;;396:44;293:1013;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;293:1013:3;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;293:1013:3;;;586:12;293:1013;;;;;;-1:-1:-1;;293:1013:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;293:1013:3;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;293:1013:3;;-1:-1:-1;;;;;;293:1013:3;;;;;;-1:-1:-1;;;;;293:1013:3;2566:40:0;293:1013:3;;2566:40:0;293:1013:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;293:1013:3;;;;;;;;;;-1:-1:-1;;;;;293:1013:3;;;;;;:::o;:::-;;;;1359:130:0;1273:6;293:1013:3;-1:-1:-1;;;;;293:1013:3;719:10:2;1422:23:0;293:1013:3;;1359:130:0:o;293:1013:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "280200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"SetUsdt(address)": "26756",
								"isController(address)": "2531",
								"owner()": "2342",
								"renounceOwnership()": "28097",
								"setController(address)": "26751",
								"transferCommission(address,uint256)": "infinite",
								"transferOwnership(address)": "28356",
								"usdt()": "2286",
								"widthdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "OR",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "RETURN",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 1306,
									"name": "REVERT",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203dee68f27150cfc6f23ef9c996346eed8b6225c59c5ae78e2d3970d97b1b049d64736f6c63430008130033",
									".code": [
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "2F48AB7D"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "92EEFE9B"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "B429AFEB"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "D9EA1B22"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "DDCD6408"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "E0DA260C"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1063,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "461BCD"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "E5"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1063,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1071,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1071,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1071,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "461BCD"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "E5"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D5CD91D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1063,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 891,
											"end": 901,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 891,
											"end": 901,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 878,
											"end": 890,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 878,
											"end": 910,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1263,
											"end": 1297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "CODESIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "461BCD"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "E5"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9021B7B73A3937B63632B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 396,
											"end": 440,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1063,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 586,
											"end": 598,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1063,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1063,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "461BCD"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "E5"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 293,
											"end": 1306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@v4.9.0/access/Ownable.sol",
								"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@v4.9.0/utils/Context.sol",
								"contracts/MasterPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"SetUsdt(address)": "ddcd6408",
							"isController(address)": "b429afeb",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setController(address)": "92eefe9b",
							"transferCommission(address,uint256)": "d9ea1b22",
							"transferOwnership(address)": "f2fde38b",
							"usdt()": "2f48ab7d",
							"widthdraw(uint256)": "e0da260c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"}],\"name\":\"SetUsdt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferCommission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"widthdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MasterPool.sol\":\"MasterPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts@v4.9.0/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@v4.9.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/MasterPool.sol\":{\"keccak256\":\"0x3d322822f9311b296fb688034475dc7459e2bc116421bbce71d0ab16a9edcc01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abbf95a0ba945b4fb21a1fee43dee4868ab3e280691d45f525e45eb3c1589f4d\",\"dweb:/ipfs/QmNvnuCUAcutUnJfTBWM3cdZcFZ63DfHL4dWYW1VYD1RCF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/MasterPool.sol:MasterPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 230,
								"contract": "contracts/MasterPool.sol:MasterPool",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 234,
								"contract": "contracts/MasterPool.sol:MasterPool",
								"label": "isController",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@v4.9.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 213,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								212
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 190,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@v4.9.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 197,
												"id": 200,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 212,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 206,
												"id": 209,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 212,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"contracts/MasterPool.sol": {
				"ast": {
					"absolutePath": "contracts/MasterPool.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"IERC20": [
							190
						],
						"IMasterPool": [
							226
						],
						"MasterPool": [
							332
						],
						"Ownable": [
							112
						]
					},
					"id": 333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@v4.9.0/access/Ownable.sol",
							"id": 215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 333,
							"sourceUnit": 113,
							"src": "56:59:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts@v4.9.0/token/ERC20/IERC20.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 333,
							"sourceUnit": 191,
							"src": "116:63:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMasterPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IMasterPool",
							"nameLocation": "191:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d9ea1b22",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferCommission",
									"nameLocation": "218:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "245:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "237:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "258:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "250:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:29:3"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "283:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "283:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:6:3"
									},
									"scope": 226,
									"src": "209:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 333,
							"src": "181:110:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "Ownable",
										"nameLocations": [
											"316:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "316:7:3"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "316:7:3"
								}
							],
							"canonicalName": "MasterPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 332,
							"linearizedBaseContracts": [
								332,
								112,
								212
							],
							"name": "MasterPool",
							"nameLocation": "302:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 230,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "351:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "336:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "336:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b429afeb",
									"id": 234,
									"mutability": "mutable",
									"name": "isController",
									"nameLocation": "428:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "396:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 233,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 231,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "404:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "396:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 232,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "415:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "481:29:3",
										"statements": [
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 239,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "491:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 240,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "498:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "491:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "491:12:3"
											}
										]
									},
									"id": 244,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "466:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "458:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:15:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:0:3"
									},
									"scope": 332,
									"src": "446:64:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "576:46:3",
										"statements": [
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 251,
															"name": "isController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "586:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 253,
														"indexExpression": {
															"id": 252,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "599:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "586:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "611:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "586:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "586:29:3"
											}
										]
									},
									"functionSelector": "92eefe9b",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 248,
												"name": "onlyOwner",
												"nameLocations": [
													"566:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "566:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "566:9:3"
										}
									],
									"name": "setController",
									"nameLocation": "525:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "547:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "539:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:18:3"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:0:3"
									},
									"scope": 332,
									"src": "516:106:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "679:29:3",
										"statements": [
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 265,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "689:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 266,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "696:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "689:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "689:12:3"
											}
										]
									},
									"functionSelector": "ddcd6408",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 262,
												"name": "onlyOwner",
												"nameLocations": [
													"669:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "669:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "669:9:3"
										}
									],
									"name": "SetUsdt",
									"nameLocation": "637:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "645:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:15:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:0:3"
									},
									"scope": 332,
									"src": "628:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "860:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 273,
																	"name": "isController",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "878:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 276,
																"indexExpression": {
																	"expression": {
																		"id": 274,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "891:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "895:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "891:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "878:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "906:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "878:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920436f6e74726f6c6c6572",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "912:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbb1fa31a9d13cb7d6ddc82a0fdb74546c85e3c3988284d465053ed1292d3527",
																"typeString": "literal_string \"Only Controller\""
															},
															"value": "Only Controller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbb1fa31a9d13cb7d6ddc82a0fdb74546c85e3c3988284d465053ed1292d3527",
																"typeString": "literal_string \"Only Controller\""
															}
														],
														"id": 272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "870:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "870:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "870:60:3"
											},
											{
												"id": 282,
												"nodeType": "PlaceholderStatement",
												"src": "940:1:3"
											}
										]
									},
									"id": 284,
									"name": "onlyController",
									"nameLocation": "845:14:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:0:3"
									},
									"src": "836:112:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1008:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "1026:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1042:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1034:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 293,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1034:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1034:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1026:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642075736474",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1046:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5625eedd0f699d62533f816c4c84148da9ed6b07f9f0af249db7bb9a51c428a9",
																"typeString": "literal_string \"Invalid usdt\""
															},
															"value": "Invalid usdt"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5625eedd0f699d62533f816c4c84148da9ed6b07f9f0af249db7bb9a51c428a9",
																"typeString": "literal_string \"Invalid usdt\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1018:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1018:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1018:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1093:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1097:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1093:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 307,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "1105:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 302,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "1078:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 301,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1071:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1071:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1084:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "1071:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1071:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1071:41:3"
											}
										]
									},
									"functionSelector": "e0da260c",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 288,
												"name": "onlyOwner",
												"nameLocations": [
													"998:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "998:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "998:9:3"
										}
									],
									"name": "widthdraw",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "981:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "973:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:16:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:3"
									},
									"scope": 332,
									"src": "954:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1246:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "1285:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1290:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 323,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "1270:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 322,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1263:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1263:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1276:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "1263:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1263:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 321,
												"id": 329,
												"nodeType": "Return",
												"src": "1256:41:3"
											}
										]
									},
									"functionSelector": "d9ea1b22",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 317,
												"name": "onlyController",
												"nameLocations": [
													"1217:14:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 284,
												"src": "1217:14:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1217:14:3"
										}
									],
									"name": "transferCommission",
									"nameLocation": "1160:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1187:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1179:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1200:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1192:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:29:3"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1240:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1240:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:6:3"
									},
									"scope": 332,
									"src": "1151:153:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 333,
							"src": "293:1013:3",
							"usedErrors": []
						}
					],
					"src": "32:1274:3"
				},
				"id": 3
			}
		}
	}
}